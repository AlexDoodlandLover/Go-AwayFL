{"version":3,"file":"loader.js","sources":["../src/loader/decompress.ts","../src/loader/fetcher.ts","../src/loader/reporter.ts","../src/loader/loader.ts","../src/loader/progressUI.ts","../src/loader/runner.ts","../src/loader/index.ts"],"sourcesContent":["export const supportDecoderApi = ('DecompressionStream' in self);\r\nexport const isSWC = (head:Uint8Array) => (head[0] === 0x43 && head[1] === 0x57 && head[2] === 0x53);\r\nexport const outputSize = (head: Uint8Array) => new DataView(head.buffer).getUint32(4, true);\r\n\r\ndeclare global {\r\n    interface Window { DecompressionStream: any; }\r\n}\r\n\r\nexport function Decoder(size: number, offset = 8) {\r\n\tif(!supportDecoderApi) {\r\n\t\tthrow 'Your browser not support DecompressionStream =(';\r\n\t}\r\n\r\n\tconst decoder = new self.DecompressionStream('deflate');\r\n\tconst decoderW = decoder.writable.getWriter();\r\n\tconst decoderR = decoder.readable.getReader();\r\n\tconst buffer = new Uint8Array(size);\r\n\r\n\tlet isRunned = false;\r\n\tlet isDone = false;\r\n\r\n\tlet donableCallback: () => void;\r\n\r\n\tfunction run() {\r\n\t\tdecoderR.read().then(function next(state: {done: boolean, value: Uint8Array}) {\r\n\t\t\tconst done = state.done;\r\n\t\t\tconst value = state.value;\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tbuffer.set(value, offset);\r\n\t\t\t\t//console.debug(\"[Loader] Decoded chunk:\", offset);\r\n\r\n\t\t\t\toffset += value.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (done || offset >= size) {\r\n\t\t\t\tisDone = true;\r\n\r\n\t\t\t\tif(donableCallback) {\r\n\t\t\t\t\tdonableCallback();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.debug(\"[Loader] Decoder closed:\", offset);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\treturn decoderR.read().then(next);\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tget buffer() {\r\n\t\t\treturn buffer;\r\n\t\t},\r\n\t\t\r\n\t\twrite(buffer: Uint8Array) {\r\n\t\t\tdecoderW.ready.then(()=>{\r\n\t\t\t\tdecoderW.write(buffer);\r\n\r\n\t\t\t\tif(!isRunned) {\r\n\t\t\t\t\tisRunned = true;\r\n\t\t\t\t\trun();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\treadAll() {\r\n\t\t\tif(isDone) {\r\n\t\t\t\treturn Promise.resolve(buffer);\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise((res)=>{\r\n\t\t\t\tdonableCallback = () => {\r\n\t\t\t\t\tres(buffer);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import {supportDecoderApi, isSWC, outputSize, Decoder } from './decompress';\r\nimport { IFile } from './iConfigBase';\r\n\r\nexport function Fetcher(url = '', progress = f => f) {\r\n\tlet total = 0;\r\n\tlet reader: ReadableStreamDefaultReader<Uint8Array>;\r\n\r\n\treturn fetch(url)\r\n\t\t.then((request) => {\r\n\t\t\ttotal = +request.headers.get('Content-Length');\r\n\t\t\treader = request.body.getReader();\r\n\r\n\t\t\treturn reader.read();\r\n\t\t})\r\n\t\t.then( (data) => {\r\n\t\t\tconst firstChunk = data.value; \r\n\r\n\t\t\tconsole.debug(\"[Loader] Header:\", String.fromCharCode.apply(null,firstChunk.slice(0, 3).reverse()));\r\n\r\n\t\t\tlet offset = 0;\r\n\t\t\tlet buffer: Uint8Array;\r\n\t\t\tlet decoder: any;\r\n\r\n\t\t\tif (supportDecoderApi && isSWC(firstChunk)) {\r\n\t\t\t\tconst totalDecodedSize = outputSize(firstChunk);\r\n\t\t\t\tconst swcHeader = firstChunk.slice(0, 8);\r\n\r\n\t\t\t\tswcHeader[0] = 70; // SWC => SWF\r\n\r\n\t\t\t\tconsole.debug(\"[Loader] SWC size:\", outputSize(firstChunk));\r\n\r\n\t\t\t\tdecoder = Decoder(totalDecodedSize, 8);\r\n\t\t\t\tbuffer = decoder.buffer;\r\n\t\t\t\tbuffer.set(swcHeader);\r\n\r\n\t\t\t\t// push witout header\r\n\t\t\t\tdecoder.write(firstChunk.slice(8));\r\n\r\n\t\t\t} else {\r\n\t\t\t\tbuffer = new Uint8Array(total);\r\n\t\t\t\tbuffer.set(firstChunk);\r\n\t\t\t}\r\n\r\n\t\t\toffset += firstChunk.length;\r\n\t\r\n\t\t\t// update all other chunks reqursive while !done\r\n\t\t\treturn reader.read().then( function moveNext(state) {\r\n\t\t\t\tconst done = state.done;\r\n\t\t\t\tconst value = state.value;\r\n\r\n                progress && progress(offset / total);\r\n\r\n\t\t\t\tif (done) {\r\n\t\t\t\t\tif(!decoder) {\r\n\t\t\t\t\t\treturn buffer;\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\treturn decoder.readAll();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!decoder) {\r\n\t\t\t\t\tbuffer.set(value, offset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdecoder.write(value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset += value.length;\r\n\r\n\t\t\t\treturn reader.read().then(moveNext);\r\n\t\t\t});\r\n\t\t})\r\n}\r\n\r\ntype tProgress = (p: number) => any;\r\n\r\nexport function loadBinary(file: IFile, progressEvent: tProgress = f => f): Promise<IFile> {\r\n\tconst isScript = file.path.indexOf(\".js\") > -1;\r\n\r\n\tif (!isScript && supportDecoderApi) {\r\n\t\treturn Fetcher(file.path, progressEvent).then((buffer) => ({\r\n\t\t\tmeta: file.meta || {},\r\n\t\t\tname: file.name,\r\n\t\t\tpath: file.path,\r\n\t\t\tresourceType: file.resourceType,\r\n\t\t\tdata: buffer.buffer,\r\n\t\t\ttype: \"swf\",\r\n\t\t}));\r\n\t}\r\n\r\n\tconst req = new XMLHttpRequest();\r\n\r\n\treq.addEventListener(\"progress\", (e) => {\r\n\t\t// get from progress, then from request, and if not valid - from file\r\n\t\tconst total = e.total \r\n\t\t\t|| +req.getResponseHeader(\"content-length\") \r\n\t\t\t|| file.size \r\n\t\t\t|| 0;\r\n\r\n\t\tif (!total) {\r\n\t\t\tprogressEvent(1);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tprogressEvent(Math.min(1, e.loaded / total));\r\n\t});\r\n\r\n\treq.open(\"GET\", file.path, true);\r\n\treq.responseType = isScript ? \"text\" : \"arraybuffer\";\r\n\r\n\treturn new Promise((res, rej) => {\r\n\t\treq.addEventListener(\"error\", rej);\r\n\t\treq.addEventListener(\"load\", () => {\r\n\t\t\tprogressEvent(1);\r\n\r\n\t\t\tif (isScript) {\r\n\t\t\t\t// unsafe\r\n\t\t\t\t//eval(req.response);\r\n\r\n\t\t\t\tconst b = new Blob([req.response], { type: \"text/javascript\" });\r\n\t\t\t\t// use blob\r\n\t\t\t\tloadScript(URL.createObjectURL(b)).then(() => res(undefined));\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tres({\r\n\t\t\t\tmeta: file.meta || {},\r\n\t\t\t\tname: file.name,\r\n\t\t\t\tpath: file.path,\r\n\t\t\t\tresourceType: file.resourceType,\r\n\t\t\t\tdata: req.response,\r\n\t\t\t\ttype: isScript ? \"js\" : \"swf\",\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treq.send();\r\n\t});\r\n}\r\n\r\nexport function loadScript(file: string | IFile, progress?: tProgress) {\r\n\tconst head = document.querySelector(\"head\");\r\n\tconst script = document.createElement(\"script\");\r\n\r\n\treturn new Promise((res, rej) => {\r\n\t\tObject.assign(script, {\r\n\t\t\ttype: \"text/javascript\",\r\n\t\t\tasync: true,\r\n\t\t\tsrc: typeof file === 'string' ? file :  file.path,\r\n\t\t\tonload: () => {\r\n\t\t\t\tprogress && progress(1);\r\n\t\t\t\tres(script);\r\n\t\t\t},\r\n\t\t\tonerror: rej,\r\n\t\t});\r\n\r\n\t\thead.appendChild(script);\r\n\t});\r\n}\r\n","export class Reporter {\r\n    value: number = 0;\r\n\r\n    constructor(\r\n        public callback?: (p: number) => void, \r\n        public childs?: Reporter[], \r\n        public weight: number = 1) {\r\n\r\n        this.childs = this.childs?.slice();\r\n        this._report = this._report.bind(this);\r\n    }\r\n\r\n    _report (v: number) {\r\n        if (!this.childs) {\r\n            this.value = v * this.weight;\r\n        } else {\r\n            let summ = 0;\r\n            let v = 0;\r\n\r\n            this.childs.forEach((e) => {\r\n                summ += e.weight || 1;\r\n                v += (e.value || 0);\r\n            });\r\n\r\n            this.value = v / summ;\r\n        }\r\n\r\n        this.callback && this.callback(this.value);\r\n    }\r\n\r\n    get report() {\r\n        return this._report;\r\n    }\r\n}\r\n","import { loadBinary, loadScript } from \"./fetcher\";\r\nimport { IFile, IGameConfigBase } from \"./iConfigBase\";\r\nimport { Reporter } from \"./reporter\";\r\n\r\nexport class Loader {\r\n\tprogress: Reporter;\r\n\r\n\tconstructor(public config: IGameConfigBase ) {};\r\n\r\n\trun(\r\n\t\tjsFiles: IFile[],\r\n\t\tbinaryFiles: IFile[],\r\n\t\tprogressEvent = (_f: number) => void 0,\r\n\t\t_debugScripts: boolean = false\r\n\t) {\r\n\t\tconst jsCount = jsFiles.length;\r\n\t\tconst binCount = binaryFiles.length;\r\n\r\n\t\tconst all: Array<string | IFile> = jsFiles.concat(<any>binaryFiles);\r\n\r\n\t\tconst reporters = Array.from({ length: jsCount + binCount }, () => new Reporter());\r\n\t\tthis.progress = new Reporter(progressEvent, reporters);\r\n\r\n\t\tlet pendings: Promise<any>[];\r\n\r\n\t\tif (!_debugScripts) {\r\n\t\t\tpendings = all.map((e, i) => loadBinary(<any>e, reporters[i].report));\r\n\t\t} else {\r\n\t\t\tpendings = binaryFiles.map((e, i) => loadBinary(e, reporters[i].report));\r\n\t\t\tpendings = pendings.concat(\r\n\t\t\t\tjsFiles.map((e, i) => loadScript(e, reporters[i + binCount].report))\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn Promise.all(pendings).then((data) => {\r\n\t\t\treturn data.filter((e) => e && e.type === \"swf\");\r\n\t\t});\r\n\t}\r\n}\r\n","import { IGameConfigBase } from \"./iConfigBase\";\r\n\r\nconst transformRel = (val: string | number, base: number) => {\r\n\treturn typeof val === \"string\"\r\n\t\t? (parseFloat(val.replace(\"%\", \"\")) / 100) * base\r\n\t\t: val;\r\n}\r\n\r\nexport class ProgressUI {\r\n\tconfig: IGameConfigBase;\r\n\tsplash: HTMLDivElement;\r\n\tprRoot: HTMLDivElement;\r\n\tprLine: HTMLDivElement;\r\n\t_isTransited: boolean = false;\r\n\r\n\tconstructor (public root: HTMLElement | HTMLDocument = document) {\r\n\t\tthis.onUpdate = this.onUpdate.bind(this);\r\n\t\tthis.onProgress = this.onProgress.bind(this);\r\n\r\n\t\twindow.addEventListener(\"resize\", this.onUpdate);\r\n\t}\r\n\r\n\tbuild() {\r\n\t\tthis.splash = this.root.querySelector<HTMLDivElement>(\"#splash__image\");\r\n\t\tthis.prRoot = this.root.querySelector<HTMLDivElement>(\"#progress__root\");\r\n\t\tthis.prLine = this.root.querySelector<HTMLDivElement>(\"#progress__line\");\r\n\r\n\t\tthis.splash.addEventListener('transitionrun', () => this._isTransited = true);\r\n\t\tthis.splash.addEventListener('transitionend', () => this._isTransited = false);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.build();\r\n\r\n\t\tconst config = this.config;\r\n\r\n\t\tObject.assign( this.splash.style, {\r\n\t\t\tbackgroundImage: `url(${config.splash})`,\r\n\t\t\tvisibility: \"visible\",\r\n\t\t});\r\n\r\n\t\tconst pr_conf = config.progress;\r\n\t\tpr_conf.rect = pr_conf.rect || [0, 0.9, 1, 0.2];\r\n\r\n\t\tObject.assign(this.prRoot.style, {\r\n\t\t\tbackground: pr_conf.back,\r\n\t\t\tleft: `${100 * pr_conf.rect[0]}%`,\r\n\t\t\ttop: `${100 * pr_conf.rect[1]}%`,\r\n\t\t\twidth: `${100 * pr_conf.rect[2]}%`,\r\n\t\t\theight: `${100 * pr_conf.rect[3]}%`,\r\n\t\t});\r\n\r\n\t\tObject.assign(this.prRoot.style, {\r\n\t\t\tbackground: pr_conf.line,\r\n\t\t});\r\n\r\n\t\tthis.onUpdate();\r\n\t}\r\n\r\n\tonProgress (p: number) {\r\n\t\tconst pr_conf = this.config.progress;\r\n\r\n\t\tswitch (pr_conf.direction) {\r\n\t\t\tcase \"tb\": {\r\n\t\t\t\tObject.assign(this.prLine.style, {\r\n\t\t\t\t\theight: `${p * 100}%`,\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"lr\":\r\n\t\t\tdefault: {\r\n\t\t\t\tObject.assign(this.prLine.style, {\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: `${p * 100}%`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonUpdate() {\r\n\t\tif (!this.splash) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst config = this.config;\r\n\t\tlet x = transformRel(config.x, window.innerWidth) || 0;\r\n\t\tlet y = transformRel(config.y, window.innerHeight) || 0;\r\n\t\tlet w = transformRel(config.w, window.innerWidth) || window.innerWidth;\r\n\t\tlet h = transformRel(config.h, window.innerHeight) || window.innerHeight;\r\n\t\t\r\n\t\tconst minMax = Math.min(h / config.height, w / config.width);\r\n\t\tconst rw = Math.ceil(config.width * minMax);\r\n\t\tconst rh = Math.ceil(config.height * minMax);\r\n\t\tconst rx = x + (w - rw) / 2;\r\n\t\tconst ry = y + (h - rh) / 2;\r\n\r\n\t\tObject.assign(this.splash.style, {\r\n\t\t\twidth: `${rw}px`,\r\n\t\t\theight: `${rh}px`,\r\n\t\t\tleft: `${rx}px`,\r\n\t\t\ttop: `${ry}px`,\r\n\t\t});\r\n\t}\r\n\r\n\tready () {\r\n\t\tif(this.config.start) {\r\n\t\t\tthis.splash.style.background = `url(${this.config.start})`;\r\n\t\t}\r\n\r\n\t\tObject.assign(this.prRoot.style, {\r\n\t\t\tvisibility: \"hidden\",\r\n\t\t\topacity: 0,\r\n\t\t});\r\n\t}\r\n\r\n\thide (dispose: boolean = false) {\r\n\t\tObject.assign(this.prRoot.style, {\r\n\t\t\tvisibility: \"hidden\",\r\n\t\t\topacity: 0,\r\n\t\t});\r\n\r\n\t\tObject.assign(this.splash.style, {\r\n\t\t\tvisibility: \"hidden\",\r\n\t\t\topacity: 0,\r\n\t\t});\r\n\r\n\t\tlet promise: Promise<any>;\r\n\t\tif (!this._isTransited) {\r\n\t\t\tpromise = Promise.resolve(true);\r\n\t\t} else {\r\n\t\t\tpromise = new Promise(res =>{\r\n\t\t\t\tthis.splash.addEventListener('transitionend', res, {once: true});\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (!dispose) {\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\treturn promise.then( () => this.dispose());\r\n\t}\r\n\r\n\tdispose () {\r\n\t\twindow.removeEventListener('resize', this.onUpdate);\r\n\t\tthis.splash.remove();\r\n\t\tthis.prRoot.remove();\r\n\t\tthis.splash = null;\r\n\t}\r\n}\r\n","import { IFile, IGameConfigBase } from \"./iConfigBase\";\r\nimport { Loader } from \"./loader\";\r\nimport { Reporter } from \"./reporter\";\r\n\r\nexport class Runner {\r\n\tprogress: Reporter;\r\n\r\n\tconstructor(public loader: Loader, public config: IGameConfigBase) {};\r\n\r\n\trunGame(progressEvent = (f) => f) {\r\n\r\n\t\tconst config = this.config;\r\n\r\n\t\tconst scripts = Array.isArray(config.runtime) ? config.runtime : [config.runtime];\t\t\r\n\t\tconst jss = scripts.map((e: any) => (<any>{ path: e.path || e, size: e.size || 0 }));\r\n\r\n\t\tconst bins = this.config.binary;\r\n\r\n\t\tconst loadReporter = new Reporter(null, null, 4);\r\n\t\tconst avmReporter = new Reporter(\r\n\t\t\t(f) => {\r\n\t\t\t\tconsole.log(\"AVM Load\", f);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t\tconfig.progressParserWeigth ? config.progressParserWeigth : 0.001\r\n\t\t);\r\n\r\n\t\tthis.progress = new Reporter(\r\n\t\t\tprogressEvent,\r\n\t\t\t[loadReporter, avmReporter]\r\n\t\t);\r\n\r\n\t\t\r\n\t\t// make functions avilailable on window, so the loaded js-code can access and execute them\r\n\t\tObject.assign(window, {\r\n\t\t\tupdatePokiProgressBar: avmReporter.report,\r\n\t\t\t//pokiGameParseComplete: complete,\r\n\t\t});\r\n\r\n\t\treturn this.loader.run(jss, <any>bins, loadReporter.report, config.debug).then((data: IFile[]) => {\r\n\t\t\tconfig.files = data;\r\n\t\t\treturn data;\r\n\t\t});\r\n\t}\r\n}\r\n","import { IGameConfigBase } from \"./iConfigBase\";\r\nimport { Loader } from \"./loader\";\r\nimport { ProgressUI } from \"./progressUI\";\r\nimport { Runner } from \"./runner\";\r\nimport { Reporter } from \"./reporter\";\r\n\r\nexport {\r\n\tLoader, Runner, ProgressUI, Reporter\r\n}\r\n\r\nlet runner: Runner;\r\nlet loader: Loader;\r\nlet ui: ProgressUI;\r\n\r\nexport const LegacyLoader = {\r\n\tinit(_gameConfig: IGameConfigBase) {\r\n\t\tloader = new Loader(_gameConfig);\r\n\t\trunner = new Runner(loader, _gameConfig);\r\n\t\tui = new ProgressUI(document);\r\n\r\n\t\tui.init();\r\n\r\n\t\twindow[\"setStageDimensions\"] = function (x, y, w, h) {\r\n\t\t\t_gameConfig.x = x;\r\n\t\t\t_gameConfig.y = y;\r\n\t\t\t_gameConfig.w = w;\r\n\t\t\t_gameConfig.h = h;\r\n\r\n\t\t\tif (window[\"AVMPlayerPoki\"]) {\r\n\t\t\t\twindow[\"AVMPlayerPoki\"].setStageDimensions(x, y, w, h);\r\n\t\t\t}\r\n\r\n\t\t\tui.onUpdate();\r\n\t\t};\r\n\t},\r\n\r\n\trunGame(progressEvent = (f) => f, completeEvent = (f) => f) {\r\n\t\tconst conf = runner.config;\r\n\r\n\t\tconst progress = (f: number) => {\r\n\t\t\tui.onProgress(f);\r\n\t\t\tprogressEvent(f); \r\n\t\t}\r\n\r\n\t\tconst complete = (func: () => void) => {\r\n\t\t\t// rereport\r\n\t\t\tcompleteEvent(func);\r\n\r\n\t\t\tif (conf.start) {\r\n\t\t\t\t//\tstart image exists.\r\n\t\t\t\t//\thide progressbar, show startimage and wait for user-input to start the game\r\n\r\n\t\t\t\tui.ready();\r\n\r\n\t\t\t\tconst onCLick = (_e: MouseEvent) => {\t\t\t\t\t\r\n\t\t\t\t\tui.hide(true);\r\n\t\t\t\t\tif (!func) \r\n\t\t\t\t\t\tthrow \"PokiPlayer did not send a callback for starting game\";\r\n\r\n\t\t\t\t\tfunc();\r\n\t\t\t\t};\r\n\r\n\t\t\t\twindow.addEventListener(\"click\", onCLick, {once: true});\r\n\r\n\t\t\t} else {\r\n\t\t\t\tui.hide(true);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// make functions avilailable on window, so the loaded js-code can access and execute them\r\n\t\tObject.assign(window, {\r\n\t\t\tpokiGameParseComplete: complete,\r\n\t\t});\r\n\t\t\r\n\t\treturn runner.runGame(progress).then((_) =>{\r\n\t\t\tconst runMethod = window[\"startPokiGame\"];\r\n\t\t\tif (!runMethod) {\r\n\t\t\t\tthrow \"Could not find a 'startPokiGame' method\";\r\n\t\t\t}\r\n\r\n\t\t\trunMethod(runner.config);\r\n\t\t})\r\n\t}\r\n}\r\n"],"names":["supportDecoderApi","self","outputSize","head","DataView","buffer","getUint32","Fetcher","url","progress","f","reader","total","fetch","then","request","headers","get","body","getReader","read","data","firstChunk","value","console","debug","String","fromCharCode","apply","slice","reverse","decoder","offset","totalDecodedSize","swcHeader","size","DecompressionStream","decoderW","writable","getWriter","decoderR","readable","Uint8Array","donableCallback","isRunned","isDone","run","next","state","done","set","length","[object Object]","ready","write","readAll","Promise","resolve","res","Decoder","moveNext","loadBinary","file","progressEvent","isScript","path","indexOf","meta","name","resourceType","type","req","XMLHttpRequest","addEventListener","e","getResponseHeader","Math","min","loaded","open","responseType","rej","b","Blob","response","loadScript","URL","createObjectURL","undefined","send","document","querySelector","script","createElement","Object","assign","async","src","onload","onerror","appendChild","Reporter","callback","childs","weight","this","_report","bind","v","summ","forEach","report","Loader","config","jsFiles","binaryFiles","_f","_debugScripts","jsCount","binCount","all","concat","reporters","Array","from","pendings","map","i","filter","transformRel","val","base","parseFloat","replace","ProgressUI","root","onUpdate","onProgress","window","splash","prRoot","prLine","_isTransited","build","style","backgroundImage","visibility","pr_conf","rect","background","back","left","top","width","height","line","p","direction","x","innerWidth","y","innerHeight","w","h","minMax","rw","ceil","rh","rx","ry","start","opacity","dispose","promise","once","removeEventListener","remove","Runner","loader","jss","isArray","runtime","bins","binary","loadReporter","avmReporter","log","progressParserWeigth","updatePokiProgressBar","files","runner","ui","LegacyLoader","_gameConfig","init","setStageDimensions","completeEvent","conf","pokiGameParseComplete","func","onCLick","_e","hide","runGame","_","runMethod"],"mappings":"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"}